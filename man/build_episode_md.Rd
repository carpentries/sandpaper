% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_episode.R
\name{build_episode_md}
\alias{build_episode_md}
\title{Build an episode to markdown}
\usage{
build_episode_md(
  path,
  hash = NULL,
  outdir = path_built(path),
  workdir = path_built(path),
  workenv = globalenv(),
  profile = "lesson-requirements",
  quiet = FALSE,
  error = TRUE
)
}
\arguments{
\item{path}{path to the RMarkdown file}

\item{hash}{hash to prepend to the output. This parameter is deprecated and
is effectively useless.}

\item{outdir}{the directory to write to}

\item{workdir}{the directory where the episode should be rendered}

\item{workenv}{an environment to use for evaluation. Defaults to the global
environment, which evaluates to the environment from \code{\link[callr:r]{callr::r()}}.}

\item{quiet}{if \code{TRUE}, output is suppressed, default is \code{FALSE} to show
\code{{knitr}} output.}

\item{error}{if \code{TRUE} (default) errors do not make an invalid build.
This can be set to false to cause the build to fail if an error occurs.
This is generally controlled via the \code{fail_on_error} config option.}
}
\value{
the path to the output, invisibly
}
\description{
This uses \code{\link[knitr:knit]{knitr::knit()}} with custom options set for the Carpentries
template. It runs in a separate process to avoid issues with user-specific
options bleeding in.
}
\note{
this function is for internal use, but exported for those who know what
they are doing.
}
\examples{
if (.Platform$OS.type == "windows") {
  options("sandpaper.use_renv" = FALSE)
}
if (!interactive() && getOption("sandpaper.use_renv")) {
  old <- renv::config$cache.symlinks()
  options(renv.config.cache.symlinks = FALSE)
  on.exit(options(renv.config.cache.symlinks = old), add = TRUE)
}
fun_dir <- tempfile()
dir.create(fs::path(fun_dir, "episodes"), recursive = TRUE)
fun_file <- file.path(fun_dir, "episodes", "fun.Rmd")
file.create(fun_file)
txt <- c(
 "---\ntitle: Fun times\n---\n\n",
 "# new page\n",
 "This is coming from `r R.version.string`"
)
writeLines(txt, fun_file)
res <- build_episode_md(fun_file, outdir = fun_dir, workdir = fun_dir)
}
\seealso{
\code{\link[=render_html]{render_html()}}, \code{\link[=build_episode_html]{build_episode_html()}}
}
\keyword{internal}
