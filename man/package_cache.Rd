% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package_cache.R
\name{use_package_cache}
\alias{use_package_cache}
\alias{no_package_cache}
\alias{package_cache_trigger}
\title{Give Consent to Use Package Cache}
\usage{
use_package_cache(prompt = interactive(), quiet = !prompt)

no_package_cache()

package_cache_trigger(rebuild = NULL)
}
\arguments{
\item{prompt}{if \code{TRUE} (default when interactive), a prompt for consent
giving information about the proposed modifications will appear on the
screen asking for the user to choose to apply the changes or not.}

\item{quiet}{if \code{TRUE}, messages will not be issued unless \code{prompt = TRUE}.
This defaults to the opposite of \code{prompt}.}

\item{rebuild}{The new value of the \code{sandpaper.package_cache_trigger} global
option. Setting this to \code{TRUE} will result in \emph{all materials} being
rebuilt when new records enter the package cache lockfile even if no
source files have changed. Setting this to \code{FALSE} will return this to the
default state, which is to rebuld only if the source files have changed.
The default is \code{NULL}, which does nothing.}
}
\value{
nothing. this is used for its side-effect

the value of \code{getOption("sandpaper.package_cache_trigger")} or
\code{FALSE}, if it is unset.
}
\description{
These functions explicitly gives \pkg{sandpaper} permission to use \pkg{renv}
to create a package cache for this and future lessons. There are two states
that you can use:
\enumerate{
\item \code{use_package_cache()}: Gives explicit permission to set up and use the
package cache with your lesson.
\item \code{no_package_cache()}: Temporarily suspends permission to use the package
cache with your lesson, regardless if it was previously given.
}

Once you have a package cache defined, you can use changes in the lockfile to
trigger rebuilds of the lesson. To do this, you can use:
\itemize{
\item \code{package_cache_trigger(TRUE)}
}

The above function is best used in conjunction with \code{\link[=update_cache]{update_cache()}}
}
\details{
\subsection{Background}{

By default, \pkg{sandpaper} will happily build your lesson using the packages
available in your default R library, but this can be undesirable for a couple
of reasons:
\enumerate{
\item You may have a different version of a lesson package that is used on the
lesson website, which may result in strange errors, warnings, or incorrect
output.
\item You might be very cautious about updating any components of your current
R infrastructure because your work depends on you having the correct
package versions installed.
}

To alleviate these concerns, \pkg{sandpaper} uses the \pkg{renv} package to
generate a lesson-specific library that has package versions pinned until
the lesson authors choose to update them. This is designed to be
minimally-invasive, using the packages you already have and downloading from
external repositories only when necessary.
}

\subsection{What if I have used \pkg{renv} before?}{

If you have used \pkg{renv} in the past, then there is no need to give
consent to use the cache.
}

\subsection{How do I turn off the feature temporarily?}{

To turn off the feature you can use \code{no_package_cache()}. \pkg{sandpaper}
will respect this option when building your lesson and will use your global
library instead.
}

\subsection{I have used \pkg{renv} before; how do I turn it off before sandpaper loads?}{

You can set \code{options(sandpaper.use_renv = FALSE)} before loading \code{{sandpaper}}.
}
}
\examples{
if (!getOption("sandpaper.use_renv") && interactive()) {
  # The first time you set up `{renv}`, you will need permission
  use_package_cache(prompt = TRUE)
  # The package cache trigger is FALSE, by default
  default <- package_cache_trigger()
  # You can set this to `TRUE` when you update packages with `update_cache()`
  package_cache_trigger(TRUE)
  # set the trigger back to its former state
  package_cache_trigger(default)
}

if (getOption("sandpaper.use_renv") && interactive()) {
  # If you have previously used `{renv}`, permission is implied
  use_package_cache(prompt = TRUE)

  # You can temporarily turn this off
  no_package_cache()
  getOption("sandpaper.use_renv") # should be FALSE
  use_package_cache(prompt = TRUE)
}
}
\seealso{
\code{\link[=manage_deps]{manage_deps()}} and \code{\link[=update_cache]{update_cache()}} for managing the requirements
inside the package cache.
}
